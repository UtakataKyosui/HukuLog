//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.11

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "outfit_clothings")]
pub struct Model {
    pub created_at: DateTimeWithTimeZone,
    pub updated_at: DateTimeWithTimeZone,
    #[sea_orm(primary_key)]
    pub id: i32,
    pub outfit_id: Uuid,
    pub clothing_id: Uuid,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::outfits::Entity",
        from = "Column::OutfitId",
        to = "super::outfits::Column::Pid"
    )]
    Outfits,
    #[sea_orm(
        belongs_to = "super::clothings::Entity",
        from = "Column::ClothingId",
        to = "super::clothings::Column::Id"
    )]
    Clothings,
}

impl Related<super::outfits::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Outfits.def()
    }
}

impl Related<super::clothings::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Clothings.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}